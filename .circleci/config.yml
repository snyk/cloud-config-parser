version: 2.1
orbs:
  snyk: snyk/snyk@1.1.1
  prodsec: snyk/prodsec-orb@1
only_branches: &only_branches
  filters:
    branches:
      ignore:
        - master
defaults: &defaults
  resource_class: small
  docker:
    - image: cimg/node:18.0.0
  working_directory: ~/snyk-config-parser
commands:
  install_deps:
    description: Install dependencies
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-cache-{{ checksum "package.json" }}
            - v1-npm-cache-
      - run:
          name: Use snyk-main npmjs user
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: v1-npm-cache-{{ checksum "package.json" }}
          paths:
            - ~/.npm
      - persist_to_workspace:
          root: .
          paths:
            - node_modules/
  checkout_and_merge:
    steps:
      - checkout
      - run:
          name: Checkout master
          command: git checkout origin/master
      - run:
          name: Merge test branch
          command: |
            git config user.name "CircleCI"
            git config user.email "noop"
            git merge --no-edit "$CIRCLE_BRANCH"
      - attach_workspace:
          at: ~/snyk-config-parser

jobs:
  install:
    <<: *defaults
    steps:
      - install_deps
  lint:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/snyk-config-parser
      - run:
          name: Run tests
          command: npm run lint
  test:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/snyk-config-parser
      - run:
          name: Run tests
          command: npm test
  build:
    <<: *defaults
    steps:
      - checkout_and_merge
      - run:
          name: Use snyk-main npmjs user
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Build
          command: npm run build
  release:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Build
          command: npm run build
      - run:
          name: Release on GitHub
          command: npx semantic-release
  security-scans:
    <<: *defaults
    steps:
      - checkout
      - install_deps
      - prodsec/security_scans:
          mode: auto
          iac-scan: disabled
          release-branch: master

workflows:
  version: 2
  test_and_release:
    jobs:
      - prodsec/secrets-scan:
          name: Scan Repository for Secrets
          context:
            - snyk-bot-slack
          channel: snyk-vuln-alerts-iac
      - security-scans:
          name: Security Scans
          context:
            - analysis-iac
      - install:
          name: Install
          context: nodejs-install
          <<: *only_branches
      - lint:
          name: Lint
          context: nodejs-install
          requires:
            - Install
          <<: *only_branches
      - build:
          name: Build
          requires:
            - Install
          <<: *only_branches
      - test:
          name: Test
          context: nodejs-install
          requires:
            - Install
          <<: *only_branches
      - release:
          name: Release to GitHub
          context: nodejs-lib-release
          requires:
          - Scan Repository for Secrets
          filters:
            branches:
              only:
                - master
